81537|function.stream-get-meta-data|0|1204523347|niels at nise81 dot com|aGVyZSBpcyBqdXN0IGFuIGV4YW1wbGUgaG93IHRvIHJlYWQgb3V0IGFsbCBtZXRhIGRhdGEuCmhvdyBldmVyIEkgZm91bmQgb3V0IHRoYXQgdGhlICJzZWVrYWJsZSItZW50cnkgZG9lc24ndCBleGlzdCBpbiBtb3N0IG9mIHRoZSBzdHJlYW1pbmcgbWVkaWEgZmlsZXMuCgogICAgICBpZiAoISgkZnAgPSBAZm9wZW4oJHVybCwgJ3InKSkpCiAgICAgICAgIHJldHVybiBOVUxMOwoKICAgICAgJG1ldGEgPSBzdHJlYW1fZ2V0X21ldGFfZGF0YSgkZnApOwogICAgICAKICAgICAgCWZvcmVhY2goYXJyYXlfa2V5cygkbWV0YSkgYXMgJGgpewogICAgICAJCSR2ID0gJG1ldGFbJGhdOwogICAgICAJCWVjaG8gIiIuJGguIjogIi4kdi4iPGJyLz4iOwogICAgICAJCWlmKGlzX2FycmF5KCR2KSl7CiAgICAgIAkJCWZvcmVhY2goYXJyYXlfa2V5cygkdikgYXMgJGhoKXsKICAgICAgCQkJCSR2diA9ICR2WyRoaF07CiAgICAgIAkJCQllY2hvICJfIi4kaGguIjogIi4kdnYuIjxici8+IjsKICAgICAgCQkJfQogICAgICAJCX0KICAgICAgCX0KICAgICAgZmNsb3NlKCRmcCk7||
28951|function.stream-get-meta-data|100|1043783686|ed at readinged dot com|QmVsb3cgaXMgYSBmdW5jdGlvbiBJIHdyb3RlIHRvIHB1bGwgdGhlICJMYXN0LU1vZGlmaWVkIiBoZWFkZXIgZnJvbSBhIGdpdmVuIFVSTC4gIEluIFBIUCB2ZXJzaW9uIDQuMyBhbmQgYWJvdmUsIGl0IHRha2VzIGFkdmFudGFnZSBvZiB0aGUgc3RyZWFtX2dldF9tZXRhX2RhdGEgZnVuY3Rpb24sIGFuZCBpbiBvbGRlciB2ZXJzaW9uIGl0IHVzZXMgYSBjb252ZW50aW9uYWwgR0VUIHByb2NlZHVyZS4gIE9uIGZhaWx1cmUgdG8gY29ubmVjdCB0byAkdXJsLCBpdCByZXR1cm5zIE5VTEwuICBJZiB0aGUgc2VydmVyIGRvZXMgbm90IHJldHVybiB0aGUgTGFzdC1Nb2RpZmllZCBoZWFkZXIsIGl0IHJldHVybnMgdGhlIGN1cnJlbnQgdGltZS4gIEFsbCB0aW1lcyBhcmUgcmV0dXJuZWQgaW4gUEhQJ3MgaW50ZWdlciBmb3JtYXQgKHNlY29uZHMgc2luY2UgZXBvY2gpLgoKVXNlIGl0IGFzIHNvOgoKJGxhc3RfbW9kaWZpZWQgPSBzdHJlYW1fbGFzdF9tb2RpZmllZCgnaHR0cDovL3d3dy5waHAubmV0L25ld3MucnNzJyk7CmlmICghaXNfbnVsbCgkbGFzdF9tb2RpZmllZCkpCiAgIGlmICgkbGFzdF9tb2RpZmllZCA8IHRpbWUoKS0zNjAwKSAvL09sZGVyIHRoYW4gYW4gaG91cgogICAgICBlY2hvICdVUkwgaXMgb2xkZXIgdGhhbiBhbiBob3VyLic7CiAgIGVsc2UKICAgICAgZWNobyAnVVJMIGlzIGZhaXJseSBuZXcuJzsKZWxzZQogICBlY2hvICdJbnZhbGlkIFVSTCEnOwoKZnVuY3Rpb24gc3RyZWFtX2xhc3RfbW9kaWZpZWQoJHVybCkKewogICBpZiAoZnVuY3Rpb25fZXhpc3RzKCd2ZXJzaW9uX2NvbXBhcmUnKSAmJiB2ZXJzaW9uX2NvbXBhcmUocGhwdmVyc2lvbigpLCAnNC4zLjAnKSA+IDApCiAgIHsKICAgICAgaWYgKCEoJGZwID0gQGZvcGVuKCR1cmwsICdyJykpKQogICAgICAgICByZXR1cm4gTlVMTDsKCiAgICAgICRtZXRhID0gc3RyZWFtX2dldF9tZXRhX2RhdGEoJGZwKTsKICAgICAgZm9yICgkaiA9IDA7IGlzc2V0KCRtZXRhWyd3cmFwcGVyX2RhdGEnXVskal0pOyAkaisrKQogICAgICB7CiAgICAgICAgIGlmIChzdHJzdHIoc3RydG9sb3dlcigkbWV0YVsnd3JhcHBlcl9kYXRhJ11bJGpdKSwgJ2xhc3QtbW9kaWZpZWQnKSkKICAgICAgICAgewogICAgICAgICAgICAkbW9kdGltZSA9IHN1YnN0cigkbWV0YVsnd3JhcHBlcl9kYXRhJ11bJGpdLCAxNSk7CiAgICAgICAgICAgIGJyZWFrOwogICAgICAgICB9CiAgICAgIH0KICAgICAgZmNsb3NlKCRmcCk7CiAgIH0KICAgZWxzZQogICB7CiAgICAgICRwYXJ0cyA9IHBhcnNlX3VybCgkdXJsKTsKICAgICAgJGhvc3QgID0gJHBhcnRzWydob3N0J107CiAgICAgICRwYXRoICA9ICRwYXJ0c1sncGF0aCddOwoKICAgICAgaWYgKCEoJGZwID0gQGZzb2Nrb3BlbigkaG9zdCwgODApKSkKICAgICAgICAgcmV0dXJuIE5VTEw7CgogICAgICAkcmVxID0gIkhFQUQgJHBhdGggSFRUUC8xLjBcclxuVXNlci1BZ2VudDogUEhQLyIucGhwdmVyc2lvbigpLiJcclxuSG9zdDogJGhvc3Q6ODBcclxuQWNjZXB0OiAqLypcclxuXHJcbiI7CiAgICAgIGZwdXRzKCRmcCwgJHJlcSk7CgogICAgICB3aGlsZSAoIWZlb2YoJGZwKSkKICAgICAgewogICAgICAgICAkc3RyID0gZmdldHMoJGZwLCA0MDk2KTsKICAgICAgICAgaWYgKHN0cnN0cihzdHJ0b2xvd2VyKCRzdHIpLCAnbGFzdC1tb2RpZmllZCcpKQogICAgICAgICB7CiAgICAgICAgICAgICRtb2R0aW1lID0gc3Vic3RyKCRzdHIsIDE1KTsKICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgIH0KICAgICAgfQogICAgICBmY2xvc2UoJGZwKTsKICB9CiAgIHJldHVybiBpc3NldCgkbW9kdGltZSkgPyBzdHJ0b3RpbWUoJG1vZHRpbWUpIDogdGltZSgpOwp9|2|0
