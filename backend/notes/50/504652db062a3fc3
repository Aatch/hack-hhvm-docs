111832|function.openssl-decrypt|0|1364947375|ittasks at gmail dot com|aW4gY2FzZSB0aGF0IGhvc3RpbmcgZG8gbm90IHByb3ZpZGUgb3BlbnNzbF9lbmNyeXB0IGRlY3J5cHQgZnVuY3Rpb25zIC0gaXQgY291bGQgYmUgbWltaWNlZCB2aWEgY29tbWFkIHByb21wdCBleGVjdXRpb25zICAKdGhpcyBmdW5jdGlvbnMgd2lsbCBjaGVjayBpcyBpZiBvcGVuc3NsIGlzIGluc3RhbGxlZCBhbmQgdHJ5IHRvIHVzZSBpdCBieSBkZWZhdWx0CgpmdW5jdGlvbiBzc2xQcm0oKQp7CiByZXR1cm4gYXJyYXkoInlvdXJfcGFzc3dvcmQiLCJJViAob3B0aW9uYWwpIiwiYWVzLTEyOC1jYmMiKTsKfQpmdW5jdGlvbiBzc2xFbmMoJG1zZykKewogIGxpc3QgKCRwYXNzLCAkaXYsICRtZXRob2QpPXNzbFBybSgpOwogIGlmKGZ1bmN0aW9uX2V4aXN0cygnb3BlbnNzbF9lbmNyeXB0JykpCiAgICAgcmV0dXJuIHVybGVuY29kZShvcGVuc3NsX2VuY3J5cHQodXJsZW5jb2RlKCRtc2cpLCAkbWV0aG9kLCAkcGFzcywgZmFsc2UsICRpdikpOwogIGVsc2UKICAgICByZXR1cm4gdXJsZW5jb2RlKGV4ZWMoImVjaG8gXCIiLnVybGVuY29kZSgkbXNnKS4iXCIgfCBvcGVuc3NsIGVuYyAtIi51cmxlbmNvZGUoJG1ldGhvZCkuIiAtYmFzZTY0IC1ub3NhbHQgLUsgIi5iaW4yaGV4KCRwYXNzKS4iIC1pdiAiLmJpbjJoZXgoJGl2KSkpOwp9CmZ1bmN0aW9uIHNzbERlYygkbXNnKQp7CiAgbGlzdCAoJHBhc3MsICRpdiwgJG1ldGhvZCk9c3NsUHJtKCk7CiAgaWYoZnVuY3Rpb25fZXhpc3RzKCdvcGVuc3NsX2RlY3J5cHQnKSkKICAgICByZXR1cm4gdHJpbSh1cmxkZWNvZGUob3BlbnNzbF9kZWNyeXB0KHVybGRlY29kZSgkbXNnKSwgJG1ldGhvZCwgJHBhc3MsIGZhbHNlLCAkaXYpKSk7CiAgZWxzZQogICAgIHJldHVybiB0cmltKHVybGRlY29kZShleGVjKCJlY2hvIFwiIi51cmxkZWNvZGUoJG1zZykuIlwiIHwgb3BlbnNzbCBlbmMgLSIuJG1ldGhvZC4iIC1kIC1iYXNlNjQgLW5vc2FsdCAtSyAiLmJpbjJoZXgoJHBhc3MpLiIgLWl2ICIuYmluMmhleCgkaXYpKSkpOwp9CgovL2V4YW1wbGUgb2YgdXNhZ2U6CiRyPSBzc2xFbmMoIlRoaXMgaXMgZW5jcnlwdGlvbi9kZWNyeXB0aW9uIHRlc3QhIik7CmVjaG8gIjxicj5cbiIuJHIuIjoiLnNzbERlYygkcik7||
107210|function.openssl-decrypt|75|1326642726|nbari at dalmp dot com|VGhlcmUgYXJlIGNhc2VzIHdoZXJlIHlvdSBuZWVkIHRvIHNlbmQgZGF0YSBpbiBhIHNlY3VyZSB3YXkgd2l0aGluIGFuICd1bi1zZWN1cmUnIGNvbm5lY3Rpb24sIGEgIHR5cGljYWxseSBzY2VuYXJpbyBvZiB0aGlzLCBpcyBhIHNpdGUgd2l0aCBvdXQgU1NMIChubyBodHRwcykuCgpGb3IgdGhpcyBjYXNlcyB5b3UgY2FuIHVzZSB0aGUgR2liYmVyaXNoQUVTIGphdmFzY3JpcHQgbGlicmFyeSwgdGhpcyBsaWJyYXJ5IHdpbGwgZW5jcnlwdCB5b3VyIGRhdGEgYmVmb3JlIGl0IGlzIHN1Ym1pdHRlZCB1c2luZyBDQkMgQUVTIGVuY3J5cHRpb24gbW9kZSwgYW5kIGl0IGlzIGZ1bGx5IGNvbXBhdGlibGUgd2l0aCBhIHN0YW5kYXIgbGlrZSBPcGVuU1NMLgoKRXhhbXBsZToKCldoZW4gZGlzcGxheWluZyBhIGZvcm0sIHlvdSBjYW4gc2V0IGEgaGlkZGVuIGZpZWxkIGNvbnRhaW5pbmcgYSB0b2tlbiwgdGhlIG9uZSBpcyBzdG9yZWQgb24gdGhlIHNlcnZlciB2aWEgc2Vzc2lvbnMgYW5kIGlzIGdvaW5nIHRvIGJlIHVzZWQgYXMgdGhlICdwYXNzd29yZCcgZm9yIGVuY3J5cHRpbmcgdGhlIGRhdGEgb24gdGhlIHVzZXIgc2lkZSwgaW4gaGVscCB3aXRoIHRoZSBHaWJiZXJpc2hBRVMgbGlicmFyeS4KCkluIEphdmFzY3JpcHQgKHVzZXIgc2lkZSk6IAovLyBHaWJiZXJpc2hBRVMuZW5jKHN0cmluZywgcGFzc3dvcmQpCi8vIERlZmF1bHRzIHRvIDI1NiBiaXQgZW5jcnlwdGlvbgpHaWJiZXJpc2hBRVMuZW5jKCJNYWRlIHdpdGggR2liYmVyaXNoXG4iLCAicGFzc3dvcmQiKTsKLy8gT3V0cHV0czogIlUyRnNkR1ZrWDErMjFPNVJCMDhiYXZGVHE3WXEvZ0NobVhyTzNmMDB0dkphVDU1QTVwUHZxdzB6RlZuSFNXMW8iCgpMYXRlciB3aGVuIHRoZSB1c2VyIHN1Ym1pdHMgdGhlIGRhdGEsIHlvdSB3aWxsIG5lZWQgdG8gZGVjcnlwdCB0aGUgZGF0YSwgZm9yIHRoYXQgeW91IGNvdWxkIHVzZSB0aGUgY2xhc3MgYmVsb3cgYW5kIHVzZSBpdCBsaWtlIHRoaXM6Cgo8P3BocApzcUFFUzo6ZGVjcnlwdCgncGFzc3dvcmQnLCAnVTJGc2RHVmtYMSsyMU81UkIwOGJhdkZUcTdZcS9nQ2htWHJPM2YwMHR2SmFUNTVBNXBQdnF3MHpGVm5IU1cxbycpOyAKPz4KClRoYXQgd2lsbCByZXR1cm4gIHRoZSBzYW1lIHJlc3VsdCwgdGhhdCBvcGVuc3NsIHdvdWxkIHJldHVybiBmcm9tIHRoaXMgY29tbWFuZCBsaW5lIDoKCmVjaG8gIlUyRnNkR1ZrWDErMjFPNVJCMDhiYXZGVHE3WXEvZ0NobVhyTzNmMDB0dkphVDU1QTVwUHZxdzB6RlZuSFNXMW8iIHwgb3BlbnNzbCBlbmMgLWQgLWFlcy0yNTYtY2JjIC1hIC1rIHBhc3N3b3JkCgpUaGlzIGNsYXNzIGN1cnJlbnRseSBvbmx5IGVuY3J5cHRzL2RlY3J5cHRzIEFFUzI1NiBidXQgY2FuIGJlIGVhc2lseSBtb2RpZmllZCB0byBmZWVkIHlvdXIgbmVlZHMsIHJpZ2h0IG5vdyBpdCBpcyBmdWxseSBjb21wYXRpYmxlIHdpdGhlIHRoZSAgR2liYmVyaXNoQUVTIGxpYnJhcnksIHNvIHlvdSBjb3VsZCBkZWNyeXB0IGFsbCB5b3VyIHVzZXJzIGRhdGEgYW5kIGFsc28gc2VuZCBlbmNyeXB0ZWQgZGF0YSBiYWNrIHRvIHRoZSB1c2VyIGluIGEgc2VjdXJlIHdheSwgYWxsIHRoaXMgdGhhbmtzIHRvIHRoZSBvcGVuc3NsLWRlY3J5cHQvb3BlbnNzbC1lbmNyeXB0IGZ1bmN0aW9ucy4KCjw/cGhwIAoKY2xhc3Mgc3FBRVMgewoKICAvKioKICAgKiBkZWNyeXB0IEFFUyAyNTYKICAgKgogICAqIEBwYXJhbSBzdHJpbmcgJHBhc3N3b3JkCiAgICogQHBhcmFtIGRhdGEgJGVkYXRhCiAgICogQHJldHVybiBkZW5jcnlwdGVkIGRhdGEKICAgKi8KICBwdWJsaWMgc3RhdGljIGZ1bmN0aW9uIGRlY3J5cHQoJHBhc3N3b3JkLCAkZWRhdGEpIHsKICAgICRkYXRhID0gYmFzZTY0X2RlY29kZSgkZWRhdGEpOwogICAgJHNhbHQgPSBzdWJzdHIoJGRhdGEsIDgsIDgpOwogICAgJGN0ID0gc3Vic3RyKCRkYXRhLCAxNik7CiAgICAvKioKICAgICAqIEZyb20gaHR0cHM6Ly9naXRodWIuY29tL21kcC9naWJiZXJpc2gtYWVzCiAgICAgKgogICAgICogTnVtYmVyIG9mIHJvdW5kcyBkZXBlbmRzIG9uIHRoZSBzaXplIG9mIHRoZSBBRVMgaW4gdXNlCiAgICAgKiAzIHJvdW5kcyBmb3IgMjU2CiAgICAgKiAgICAgICAgMiByb3VuZHMgZm9yIHRoZSBrZXksIDEgZm9yIHRoZSBJVgogICAgICogMiByb3VuZHMgZm9yIDEyOAogICAgICogICAgICAgIDEgcm91bmQgZm9yIHRoZSBrZXksIDEgcm91bmQgZm9yIHRoZSBJVgogICAgICogMyByb3VuZHMgZm9yIDE5MiBzaW5jZSBpdCdzIG5vdCBldmVubHkgZGl2aWRlZCBieSAxMjggYml0cwogICAgICovCiAgICAkcm91bmRzID0gMzsKICAgICRkYXRhMDAgPSAkcGFzc3dvcmQuJHNhbHQ7CiAgICAkbWQ1X2hhc2ggPSBhcnJheSgpOwogICAgJG1kNV9oYXNoWzBdID0gbWQ1KCRkYXRhMDAsIHRydWUpOwogICAgJHJlc3VsdCA9ICRtZDVfaGFzaFswXTsKICAgIGZvciAoJGkgPSAxOyAkaSA8ICRyb3VuZHM7ICRpKyspIHsKICAgICAgJG1kNV9oYXNoWyRpXSA9IG1kNSgkbWQ1X2hhc2hbJGkgLSAxXS4kZGF0YTAwLCB0cnVlKTsKICAgIAkkcmVzdWx0IC49ICRtZDVfaGFzaFskaV07CiAgICB9CiAgICAka2V5ID0gc3Vic3RyKCRyZXN1bHQsIDAsIDMyKTsKICAgICRpdiAgPSBzdWJzdHIoJHJlc3VsdCwgMzIsMTYpOwoKCSAgcmV0dXJuIG9wZW5zc2xfZGVjcnlwdCgkY3QsICdhZXMtMjU2LWNiYycsICRrZXksIHRydWUsICRpdik7CiAgfQoKICAvKioKICAgKiBjcnlwdCBBRVMgMjU2CiAgICoKICAgKiBAcGFyYW0gc3RyaW5nICRwYXNzd29yZAogICAqIEBwYXJhbSBkYXRhICRkYXRhCiAgICogQHJldHVybiBiYXNlNjQgZW5jcnlwdGVkIGRhdGEKICAgKi8KICBwdWJsaWMgc3RhdGljIGZ1bmN0aW9uIGNyeXB0KCRwYXNzd29yZCwgJGRhdGEpIHsKICAgIC8vIFNldCBhIHJhbmRvbSBzYWx0CiAgICAkc2FsdCA9IG9wZW5zc2xfcmFuZG9tX3BzZXVkb19ieXRlcyg4KTsKCiAgICAkc2FsdGVkID0gJyc7CiAgICAkZHggPSAnJzsKICAgIC8vIFNhbHQgdGhlIGtleSgzMikgYW5kIGl2KDE2KSA9IDQ4CiAgICB3aGlsZSAoc3RybGVuKCRzYWx0ZWQpIDwgNDgpIHsKICAgICAgJGR4ID0gbWQ1KCRkeC4kcGFzc3dvcmQuJHNhbHQsIHRydWUpOwogICAgICAkc2FsdGVkIC49ICRkeDsKICAgIH0KCiAgICAka2V5ID0gc3Vic3RyKCRzYWx0ZWQsIDAsIDMyKTsKICAgICRpdiAgPSBzdWJzdHIoJHNhbHRlZCwgMzIsMTYpOwoKICAgICRlbmNyeXB0ZWRfZGF0YSA9IG9wZW5zc2xfZW5jcnlwdCgkZGF0YSwgJ2Flcy0yNTYtY2JjJywgJGtleSwgdHJ1ZSwgJGl2KTsKICAgIHJldHVybiBiYXNlNjRfZW5jb2RlKCdTYWx0ZWRfXycgLiAkc2FsdCAuICRlbmNyeXB0ZWRfZGF0YSk7CiAgfQoKfQoKPz4=|3|1
