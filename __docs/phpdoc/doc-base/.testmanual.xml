<?xml version="1.0" encoding="utf-8"?>
<set xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.0" xml:id="index" xml:lang="en">
 <title>HHVM Manual</title>
<phpdoc:classref xml:id="class.traversable" xmlns:phpdoc="http://php.net/ns/phpdoc" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xi="http://www.w3.org/2001/XInclude">

 <title>The Traversable interface</title>
 <titleabbrev>Traversable</titleabbrev>

 <partintro>

<!-- {{{ Traversable intro -->
  <section xml:id="traversable.intro">
   <para>
    Interface to detect if a class is traversable using foreach;.
   </para>
   <para>
    Abstract base interface that cannot be implemented alone. Instead it must
    be implemented by either <classname>IteratorAggregate</classname> or
    <classname>Iterator</classname>.
   </para>
   <note>
    <para>
     Internal (built-in) classes that implement this interface can be used in
     a foreach; construct and do not need to implement
     <classname>IteratorAggregate</classname> or
     <classname>Iterator</classname>.
    </para>
   </note>
   <note>
    <para>
     This is an internal engine interface which cannot be implemented in PHP
     scripts. Either <classname>IteratorAggregate</classname> or
     <classname>Iterator</classname> must be used instead.
      When implementing an interface which extends Traversable, make sure to
      list <classname>IteratorAggregate</classname> or 
      <classname>Iterator</classname> before its name in the implements
      clause.
    </para>
   </note>
  </section>
<!-- }}} -->

  <section xml:id="traversable.synopsis">

<!-- {{{ Synopsis -->
   <classsynopsis>
    <ooclass><classname>Traversable</classname></ooclass>

<!-- {{{ Class synopsis -->
    <classsynopsisinfo>
     <ooclass>
      <classname>Traversable</classname>
     </ooclass>
    </classsynopsisinfo>
<!-- }}} -->

   </classsynopsis>
<!-- }}} -->

   <para>
    This interface has no methods, its only purpose is to be the base
    interface for all traversable classes.
   </para>

  </section>

 </partintro>

</phpdoc:classref>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
<phpdoc:classref xml:id="class.traversabletv" xmlns:phpdoc="http://php.net/ns/phpdoc" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xi="http://www.w3.org/2001/XInclude">

 <title>The Traversable&lt;Tv&gt; interface</title>
 <titleabbrev>Traversable&lt;Tv&gt;</titleabbrev>

 <partintro>

<!-- {{{ TraversableTv intro -->
  <section xml:id="traversabletv.intro">
   <para>
    Interface to detect if a class is traversable using foreach;.
   </para>
   <para>
    Abstract base interface that cannot be implemented alone. Instead it must
    be implemented by either <classname>IteratorAggregate&lt;Tv&gt;</classname> or
    <classname>Iterator&lt;Tv&gt;</classname>.
   </para>
   <note>
    <para>
     Internal (built-in) classes that implement this interface can be used in
     a foreach; construct and do not need to implement
     <classname>IteratorAggregate&lt;Tv&gt;</classname> or
     <classname>Iterator&lt;Tv&gt;</classname>.
    </para>
   </note>
   <note>
    <para>
     This is an internal engine interface which cannot be implemented in PHP
     scripts. Either <classname>IteratorAggregate&lt;Tv&gt;</classname> or
     <classname>Iterator&lt;Tv&gt;</classname> must be used instead.
      When implementing an interface which extends Traversable&lt;Tv&gt;, make sure to
      list <classname>IteratorAggregate&lt;Tv&gt;</classname> or 
      <classname>Iterator&lt;Tv&gt;</classname> before its name in the implements
      clause.
    </para>
   </note>
  </section>
<!-- }}} -->

  <section xml:id="traversabletv.synopsis">
<!-- {{{ Synopsis -->
   <classsynopsis>
    <ooclass><classname>Traversable&lt;Tv&gt;</classname></ooclass>

<!-- {{{ Class synopsis -->
    <classsynopsisinfo>
     <ooclass>
      <classname>Traversable&lt;Tv&gt;</classname>
     </ooclass>
    </classsynopsisinfo>
<!-- }}} -->

   </classsynopsis>
<!-- }}} -->

   <para>
    This interface has no methods, its only purpose is to be the base
    interface for all traversable classes.
   </para>

  </section>

 </partintro>

</phpdoc:classref>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
 <phpdoc:classref xmlns:phpdoc="http://php.net/ns/phpdoc" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xi="http://www.w3.org/2001/XInclude" xml:id="class.hack.vectortv">
 <title>The Vector&lt;Tv&gt; class</title>
 <titleabbrev>Vector&lt;Tv&gt;</titleabbrev>

 <partintro>

<!-- {{{ ClassName intro -->
  <section xml:id="vectortv.intro">
   <title xmlns="http://docbook.org/ns/docbook">Introduction</title>
   <para>
    ???????
   </para>
  </section>
<!-- }}} -->

  <section xml:id="vectortv.synopsis">
   <title>Class synopsis</title>

<!-- {{{ Synopsis -->
   <classsynopsis>
    <ooclass><classname>Vector&lt;Tv&gt;</classname></ooclass>

<!-- {{{ Class synopsis -->
    <classsynopsisinfo>
     <ooclass>
      <classname>Vector&lt;Tv&gt;</classname>
     </ooclass>

<!-- If the class implements an interface, or two, use this (one oointerface element per interface) -->
     <oointerface>
      <interfacename>MutableVector&lt;Tv&gt;</interfacename>
     </oointerface>
     <oointerface>
      <interfacename>Indexish&lt;Tv&gt;</interfacename>
     </oointerface>
    </classsynopsisinfo>
<!-- }}} -->

    <classsynopsisinfo role="comment">Methods</classsynopsisinfo>
     <methodsynopsis xmlns="http://docbook.org/ns/docbook">
   <modifier>public</modifier>
   <type>Vector&lt;Tv&gt;</type>
   <methodname>Vector&lt;Tv&gt;::add</methodname>
   <methodparam><type>Tv</type><parameter>value</parameter></methodparam>
  </methodsynopsis>
       <methodsynopsis xmlns="http://docbook.org/ns/docbook">
   <modifier>public</modifier>
   <type>Vector&lt;Pair&lt;Tv, Tu&gt;&gt;</type>
   <methodname>Vector&lt;Tv&gt;::zip&lt;Tu&gt;</methodname>
  <methodparam><type>Traversable&lt;Tu&gt;</type><parameter>iterable</parameter></methodparam>
  </methodsynopsis> 
</classsynopsis>
 </section>
</partintro>
<refentry xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="hack.vectortv.add">
 <refnamediv>
  <refname>Vector&lt;Tv&gt;::add</refname>
  <refpurpose>???????????</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  <title xmlns="http://docbook.org/ns/docbook">Description</title>
  <methodsynopsis>
   <modifier>public</modifier>
   <type>Vector&lt;Tv&gt;</type>
   <methodname>Vector&lt;Tv&gt;::add</methodname>
   <methodparam><type>Tv</type><parameter>value</parameter></methodparam>
  </methodsynopsis>

  <!-- Note: If this method/property as an alternate procedural mapping then the method/property synopsis MUST be listed BEFORE the function synopsis -->
  <para>
   The method description goes here.
  </para>
 </refsect1>
</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
<!-- $Revision:$ -->
<refentry xml:id="vectortv.ziptu" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>Vector&lt;Tv&gt;::zip&lt;Tu&gt;</refname>
  <refpurpose>PURPOSE</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  <title xmlns="http://docbook.org/ns/docbook">Description</title>
  <methodsynopsis>
   <modifier>public</modifier>
   <type>Vector&lt;Pair&lt;Tv, Tu&gt;&gt;</type>
   <methodname>Vector&lt;Tv&gt;::zip&lt;Tu&gt;</methodname>
   <methodparam><type>Traversable&lt;Tu&gt;</type><parameter>iterable</parameter></methodparam>
  </methodsynopsis>

<!-- Note: If this method/property as an alternate procedural mapping then the method/property synopsis MUST be listed BEFORE the function synopsis -->
  <para>
   The method description goes here.
  </para>
 </refsect1>
</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
</phpdoc:classref>
<phpdoc:classref xmlns:phpdoc="http://php.net/ns/phpdoc" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xi="http://www.w3.org/2001/XInclude" xml:id="class.simplexmlelement">
 <title>The SimpleXMLElement class</title>
 <titleabbrev>SimpleXMLElement</titleabbrev>

 <partintro>

<!-- {{{ SimpleXMLElement intro -->
  <section xml:id="simplexmlelement.intro">
   <title xmlns="http://docbook.org/ns/docbook">Introduction</title>
   <para>
    Represents an element in an XML document.
   </para>
  </section>
<!-- }}} -->

  <section xml:id="simplexmlelement.synopsis">
   <title xmlns="http://docbook.org/ns/docbook">Class synopsis</title>

<!-- {{{ Synopsis -->
   <classsynopsis>
    <ooclass><classname>SimpleXMLElement</classname></ooclass>

<!-- {{{ Class synopsis -->
    <classsynopsisinfo>
     <ooclass>
      <classname>SimpleXMLElement</classname>
     </ooclass>

     <oointerface>
      <interfacename>Traversable</interfacename>
     </oointerface>
    </classsynopsisinfo>
<!-- }}} -->

    <classsynopsisinfo role="comment">Methods</classsynopsisinfo>
    <methodsynopsis xmlns="http://docbook.org/ns/docbook">
   <modifier>public</modifier> <type>void</type><methodname>SimpleXMLElement::addAttribute</methodname>
   <methodparam><type>string</type><parameter>name</parameter></methodparam>
   <methodparam choice="opt"><type>string</type><parameter>value</parameter></methodparam> 
   <methodparam choice="opt"><type>string</type><parameter>namespace</parameter></methodparam>
  </methodsynopsis>
</classsynopsis>
</section>
</partintro>
<refentry xmlns="http://docbook.org/ns/docbook" xml:id="simplexmlelement.addattribute">
 <refnamediv>
  <refname>SimpleXMLElement::addAttribute</refname>
  <refpurpose>
   Adds an attribute to the SimpleXML element
  </refpurpose>
 </refnamediv>
 <refsect1 role="description">
  <title xmlns="http://docbook.org/ns/docbook">Description</title>
  <methodsynopsis>
   <modifier>public</modifier> <type>void</type><methodname>SimpleXMLElement::addAttribute</methodname>
   <methodparam><type>string</type><parameter>name</parameter></methodparam>
   <methodparam choice="opt"><type>string</type><parameter>value</parameter></methodparam>
   <methodparam choice="opt"><type>string</type><parameter>namespace</parameter></methodparam>
  </methodsynopsis>
  <para>
   Adds an attribute to the SimpleXML element.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  <title xmlns="http://docbook.org/ns/docbook">Parameters</title>
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>name</parameter></term>
     <listitem>
      <para>
       The name of the attribute to add.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>value</parameter></term>
     <listitem>
      <para>
       The value of the attribute.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>namespace</parameter></term>
     <listitem>
      <para>
       If specified, the namespace to which the attribute belongs.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  <title xmlns="http://docbook.org/ns/docbook">Return Values</title>
  <para>
   No value is returned.
  </para>
</refsect1>
</refentry>
</phpdoc:classref>
</set>
